Pro IDL_Bash

    Omega_need                  =   1000L
    time_step                   =   0.008
    dump_ratio                  =   10L
    Real_All_frame_number       =   10*10000UL
    file_number                 =   5
    jump_frame                  =   20

    skip_ratio                  =   0.0
    start_ratio                 =   0.0

    frame_to_omega              =   double((2^0.5)*time_step*dump_ratio)
    useful_length               =   long64(Omega_need*frame_to_omega)
    print , useful_length
    single_file_frame_number    =   long64(Real_All_frame_number / file_number)
    all_frame_number            =   long64(Real_All_frame_number*(1-skip_ratio))
    Frame_number                =   long64(single_file_frame_number * (1-skip_ratio))
    start_point                 =   long64(single_file_frame_number * start_ratio)
    single_msd_data             =   dblarr(2,useful_length)
    All_msd_data                =   dblarr(2,useful_length) 
    
    
    file_path_temp              =   ' '
    file_path                   =   ' '
    bash_path                   =   file_dirname(routine_filepath('IDL_Bash'))
    disk                        =   strmid(bash_path,0,1);获取盘符位置
    data_path                   =   disk + ':\Data\'      
        
    time1   =   systime(/seconds)
    time    =   systime()
    print   ,   'Program start at ' , time
    
    openr   ,   path_getting    ,   bash_path + '\Bash.txt' , /get_lun 
        while ~eof(path_getting)  do begin
            time3   =   systime(/seconds)           
            readf       ,   path_getting  ,   file_path_temp
                        
            str_temp1           = strpos(file_path_temp,'\N') + strlen('\N')
            str_temp2           = strpos(file_path_temp,'\Compare')
            All_Particle_number = long(strmid(file_path_temp,str_temp1,str_temp2-str_temp1))
            
;            str_temp1   = strpos(file_path_temp,'\Gamma') + strlen('\Gamma')
;            str_temp2   = strpos(file_path_temp,'\Beta')
;            Gamma_      = long(strmid(file_path_temp,str_temp1,str_temp2-str_temp1))
            ;Normalized  = (Gamma_^2/(All_Particle_number/2.0))*frame_to_omega
            ;在Data_Getting中已经对flux normalized，故只需一次frame到ogmega

            file_path   =  data_path   + file_path_temp + '\'
            
                for i_file_number = 1 , file_number  do begin 
                    time5 = systime(/seconds)

                        IDL_Data_Getting    , file_path , single_msd_data , Frame_number , All_Particle_number , i_file_number , frame_to_omega , useful_length , jump_frame
                        All_msd_data = single_msd_data + All_msd_data

                    time6 = systime(/seconds)
                    time_spend3  =   STRTRIM(string(long(( time6 - time5 )/60)),2)
                    number  =   STRTRIM(string(i_file_number),2)                  
                    print  ,  number , 'th has been read , and cost ' , time_spend3 , ' minutes.'
                endfor

                All_msd_data = All_msd_data / file_number
                analysis_path   =  data_path  + 'IDL_Basic_analysis\' + file_path_temp + '\'
                Data_Building   ,  analysis_path , All_msd_data , useful_length , frame_to_omega
            
            time4   =   systime(/seconds)
            time_spend1  =   STRTRIM(string(long((time4 - time3)/60)),2)
            print , file_path_temp ,' done ,and cost ' , time_spend1 , ' minutes.'
                
        endwhile
    free_lun,   path_getting
        
    time2       =   systime(/seconds)
    time_spend2 =    STRTRIM(string(long(( time2 - time1 )/3600)),2)
    print , 'All done , and cost '   , time_spend2 , ' hours.'
End